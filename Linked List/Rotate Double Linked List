#Given a doubly-linked list, rotate the linked list counter-clockwise by N nodes. Here N is a given positive integer and is smaller than the count of nodes in linked list. 
#Input : a  b  c  d  e   N = 2
Output : c  d  e  a  b 

Input : a  b  c  d  e  f  g  h   N = 4
Output : e  f  g  h  a  b  c  d 

#CODE:
#include<iostream>
#include<queue>
using namespace std;
struct node
{
    struct node *left;
    int data;
    struct node *right;
}*head=NULL,*tail=NULL;
void insert(int n)
{
    struct node *temp;
    temp=new node;
    temp->data=n;
    temp->left=temp->right=NULL;
    if(head==NULL)
         head=tail=temp;
    else
    {
        temp->left=tail;
        tail->right=temp;
        tail=temp;
    }
}
void rotate(struct node *p,int k)
{
    struct node*temp=p;
    while(temp->right!=NULL)
    {
        temp=temp->right;
    }
    temp->right=p;
    p->left=temp;
    int c=0;
    struct node *temp1=p;
    struct node *temp2=NULL;
    while(temp1!=NULL && c!=k)
    {
        temp2=temp1;
        temp1=temp1->right;
        c++;
    }
    temp2->right=NULL;
    temp1->left=NULL;
    head=temp1;
}
void display(struct node *p)
{
    while(p)
    {
        cout<<p->data<<"<->";
        p=p->right;
    }
}
int main()
{
    insert(1);
    insert(2);
    insert(3);
    insert(4);
    insert(5);
    insert(6);
    rotate(head,2);
    display(head);
}
