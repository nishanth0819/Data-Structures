#Count the Subsets with given diff:
#I/P:{1,1,2,3},Diff=1;
O/P:1
Expalnation:{2,1}-{3,1}=1,{2,1,1}-{3}=1,{2,1}-{3,1};

#Let sum of subset 1 be s1 and subset 2 with s2
s1 - s2 = diff (given)
s1 + s2=sum of array (logical)
Therefore adding both eq we get :
2s1= diff + sum of array
s1= (diff + sum of array)/2;
Problem reduces to find no of subsets with given sum


#CODE:

#include<iostream>
#include<vector>
using namespace std;
int find(vector<int> g,int sum,int n)
{
    vector<vector<int>> dp(n+1,vector<int>(sum+1));
    for(int i=0;i<=n;i++)
    {
        dp[i][0]=1;
    }
    for(int i=1;i<=sum;i++)
    {
        dp[0][i]=0;
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<=sum;j++)
        {
            if(g[i-1]>j)
              dp[i][j]=dp[i-1][j];
            else
               dp[i][j]=dp[i-1][j]+dp[i-1][j-g[i-1]];
        }
    }
    return dp[n][sum];
}
int findcount(vector<int> g,int diff)
{
    int sum=0;
    for(auto it:g)
       sum=sum+it;
    int target=(sum+diff)/2;
    return find(g,target,g.size());
}
