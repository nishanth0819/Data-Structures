#There are n stairs, a person standing at the bottom wants to reach the top. 
#The person can climb either 1 stair or 2 stairs at a time. 
#Count the number of ways, the person can reach the top.
Input: n = 1
Output: 1
There is only one way to climb 1 stair

Input: n = 2
Output: 2
There are two ways: (1, 1) and (2)

Input: n = 4
Output: 5
(1, 1, 1, 1), (1, 1, 2), (2, 1, 1), (1, 2, 1), (2, 2) 

#Recursive Code
int noofways(int g)
{
    if(g==1 || g==2)
      return g;
    else
       return noofways(g-1)+noofways(g-2);
}
#DP code
int noofwaysdp(int g)
{
    int dp[g+1];
    for(int i=1;i<=g;i++)
    {
        if(i==1 || i==2)
           dp[i]=i;
        else
           dp[i]=dp[i-1]+dp[i-2];
    }
    return dp[g];
}
